/*
 * Created on 2022-02-23 ( 12:58:50 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.ticket.booking.demo.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * JPA entity class for "Theatre"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name = "theatre", catalog = "ticket_booking_system")
public class Theatre implements Serializable {

	private static final long serialVersionUID = 1L;

	// --- ENTITY PRIMARY KEY
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", nullable = false)
	private Integer id;

	// --- ENTITY DATA FIELDS
	@Column(name = "name", length = 200)
	private String name;

	@Column(name = "address", length = 400)
	private String address;

	@Column(name = "landmark", length = 400)
	private String landmark;

	@Column(name = "pincode", length = 6)
	private String pincode;

	@Column(name = "map_coordinates", length = 100)
	private String mapCoordinates;

	@Column(name = "screen_count")
	private Integer screenCount;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time")
	private Date createdTime;

	@Column(name = "created_by")
	private Integer createdBy;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_time")
	private Date updatedTime;

	@Column(name = "updated_by")
	private Integer updatedBy;

	// --- ENTITY LINKS ( RELATIONSHIP )
	@ManyToOne
	@JoinColumn(name = "user_id", referencedColumnName = "id", insertable = false, updatable = false)
	private User user;

	@OneToMany(mappedBy = "theatre")
	private Set<Screen> screenList;

	@ManyToOne
	@JoinColumn(name = "city_id", referencedColumnName = "id", insertable = false, updatable = false)
	private City city;

	/**
	 * Constructor
	 */
	public Theatre() {
		super();
	}

	// --- GETTERS & SETTERS FOR FIELDS
	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return this.id;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getAddress() {
		return this.address;
	}

	public void setLandmark(String landmark) {
		this.landmark = landmark;
	}

	public String getLandmark() {
		return this.landmark;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}

	public String getPincode() {
		return this.pincode;
	}

	public void setMapCoordinates(String mapCoordinates) {
		this.mapCoordinates = mapCoordinates;
	}

	public String getMapCoordinates() {
		return this.mapCoordinates;
	}

	public void setScreenCount(Integer screenCount) {
		this.screenCount = screenCount;
	}

	public Integer getScreenCount() {
		return this.screenCount;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	// --- GETTERS FOR LINKS
	public User getUser() {
		return this.user;
	}

	public Set<Screen> getListOfScreen() {
		return this.screenList;
	}

	public City getCity() {
		return this.city;
	}

	// --- toString specific method
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(id);
		sb.append("|");
		sb.append(name);
		sb.append("|");
		sb.append(address);
		sb.append("|");
		sb.append(landmark);
		sb.append("|");
		sb.append(pincode);
		sb.append("|");
		sb.append(mapCoordinates);
		sb.append("|");
		sb.append(screenCount);
		sb.append("|");
		sb.append(createdTime);
		sb.append("|");
		sb.append(createdBy);
		sb.append("|");
		sb.append(updatedTime);
		sb.append("|");
		sb.append(updatedBy);
		return sb.toString();
	}

}
